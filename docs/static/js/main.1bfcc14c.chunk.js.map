{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGfis.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OACzCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,sBAAKC,UAAU,uBAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,4BAAIA,Q,uBCTHK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAClDF,GAFe,+DAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KALW,kBAOZA,EAAKC,KAAI,SAACC,GAAS,IAAD,EACrB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,SAXvB,2CAAH,sDCIPgB,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SACtB,ECFwB,SAAEA,GAE1B,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNM,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACNhB,EAASC,GACJgB,MAAM,SAAAC,GACHH,EAAS,CACLR,KAAMW,EACNL,SAAS,SAGvB,CAACZ,IAEIa,EDhB2BK,CAAalB,GAAjCS,EAAd,EAAQH,KAAcM,EAAtB,EAAsBA,QAEtB,OACI,qCACI,mCAAMZ,EAAN,OACCY,GAAW,2CACZ,qBAAKhB,UAAU,YAAf,SACKa,EAAOF,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,aET7B0B,EAAe,WACxB,MAAoCxC,mBAAS,CAAC,QAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK0C,EAAWb,KAAI,SAACP,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCPlCqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1bfcc14c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue,  ...cats, ] ); \r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.any\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={ url } alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=10&api_key=x68MNQp1DWFtZvNQEDs9O1JjdUi9qyPo`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    return data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGfis';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [], \r\n        loading: true//\r\n    })\r\n\r\n    \r\n    useEffect(() =>{\r\n        getGifs( category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs, //\r\n                    loading: false\r\n                });\r\n            })\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"fma\"]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}